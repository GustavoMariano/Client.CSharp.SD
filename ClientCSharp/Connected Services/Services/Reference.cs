//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClientCSharp.Services {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://localhost:8888/", ConfigurationName="Services.AbcBolinhasPortType")]
    public interface AbcBolinhasPortType {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost:8888/verifica_NumeroPar", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name= "out2")]
        bool verifica_NumeroPar(int in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost:8888/verifica_NumeroPar", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name= "out2")]
        System.Threading.Tasks.Task<bool> verifica_NumeroParAsync(int in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost:8888/valida_CPF", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out0")]
        bool valida_CPF(string cpf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost:8888/valida_CPF", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out0")]
        System.Threading.Tasks.Task<bool> valida_CPFAsync(string cpf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost:8888/math_operation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out1")]
        string math_operation(string operador, int num1, int num2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost:8888/math_operation", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out1")]
        System.Threading.Tasks.Task<string> math_operationAsync(string operador, int num1, int num2);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface AbcBolinhasPortTypeChannel : ClientCSharp.Services.AbcBolinhasPortType, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AbcBolinhasPortTypeClient : System.ServiceModel.ClientBase<ClientCSharp.Services.AbcBolinhasPortType>, ClientCSharp.Services.AbcBolinhasPortType {
        
        public AbcBolinhasPortTypeClient() {
        }
        
        public AbcBolinhasPortTypeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AbcBolinhasPortTypeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AbcBolinhasPortTypeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AbcBolinhasPortTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool verifica_NumeroPar(int in0) {
            return base.Channel.verifica_NumeroPar(in0);
        }
        
        public System.Threading.Tasks.Task<bool> verifica_NumeroParAsync(int in0) {
            return base.Channel.verifica_NumeroParAsync(in0);
        }
        
        public bool valida_CPF(string cpf) {
            return base.Channel.valida_CPF(cpf);
        }
        
        public System.Threading.Tasks.Task<bool> valida_CPFAsync(string cpf) {
            return base.Channel.valida_CPFAsync(cpf);
        }
        
        public string math_operation(string operador, int num1, int num2) {
            return base.Channel.math_operation(operador, num1, num2);
        }
        
        public System.Threading.Tasks.Task<string> math_operationAsync(string operador, int num1, int num2) {
            return base.Channel.math_operationAsync(operador, num1, num2);
        }
    }
}
